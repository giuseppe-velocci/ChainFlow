<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <Version>1.0.0</Version>
    <Authors>Giuseppe Velocci</Authors>
    <Product>ChainFlow</Product>
    <PackageTags>ChainFlow;Chain of Responsibility Framework;ChainFlow Framework</PackageTags>
    <Description>
      A modern framework based on Chain of Responsibility pattern with:
      - Worflow based declaration of application logic
      - Classes Single Responsibility as first class citizen
      - Unified and predictable way to build application
      Plus, some extra features out of the box:
      - Auto-documentation of workflows powered by Memarmaid.js (https://mermaid.js.org/)
      - Debugger mode to log current handler involved in processing to ease issue investigation
      - An optional ChainFlow.TestKit package to make testing of Workflows a breeze
      Source code and samples at: https://github.com/giuseppe-velocci/ChainFlow
    </Description>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="7.0.0" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="Microsoft.Extensions.Configuration.Abstractions">
      <HintPath>..\..\..\..\..\..\nuget\microsoft.extensions.configuration.abstractions\7.0.0\lib\net6.0\Microsoft.Extensions.Configuration.Abstractions.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.Extensions.Hosting.Abstractions">
      <HintPath>..\..\..\..\..\..\nuget\microsoft.extensions.hosting.abstractions\7.0.0\lib\net6.0\Microsoft.Extensions.Hosting.Abstractions.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.Extensions.Logging.Abstractions">
      <HintPath>..\..\..\..\..\..\nuget\microsoft.extensions.logging.abstractions\7.0.0\lib\net6.0\Microsoft.Extensions.Logging.Abstractions.dll</HintPath>
    </Reference>
  </ItemGroup>

</Project>
